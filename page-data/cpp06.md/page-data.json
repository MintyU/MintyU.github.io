{"componentChunkName":"component---src-templates-post-tsx","path":"/cpp06.md/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"연산자operator\" style=\"position:relative;\"><a href=\"#%EC%97%B0%EC%82%B0%EC%9E%90operator\" aria-label=\"연산자operator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>연산자(Operator)</h2>\n<p>C++은 여러 종류의 연산을 위해 다양한 연산자(operator)를 제공하고 있습니다. </p>\n<h3 id=\"산술연산자arithmetic-operator\" style=\"position:relative;\"><a href=\"#%EC%82%B0%EC%88%A0%EC%97%B0%EC%82%B0%EC%9E%90arithmetic-operator\" aria-label=\"산술연산자arithmetic operator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>산술연산자(Arithmetic Operator)</h3>\n<table>\n<thead>\n<tr>\n<th align=\"center\">산술 연산자</th>\n<th align=\"center\">설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">+</td>\n<td align=\"center\">왼쪽의 피연산자에 오른쪽의 피연산자를 더함.</td>\n</tr>\n<tr>\n<td align=\"center\">-</td>\n<td align=\"center\">왼쪽의 피연산자에서 오른쪽의 피연산자를 뺌.</td>\n</tr>\n<tr>\n<td align=\"center\">*</td>\n<td align=\"center\">왼쪽의 피연산자에 오른쪽의 피연산자를 곱함.</td>\n</tr>\n<tr>\n<td align=\"center\">/</td>\n<td align=\"center\">왼쪽의 피연산자를 오른쪽의 피연산자로 나눔.</td>\n</tr>\n<tr>\n<td align=\"center\">%</td>\n<td align=\"center\">왼쪽의 피연산자를 오른쪽의 피연산자로 나눈 후, 그 나머지를 반환함.</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>예제</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\n \n\ncout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"+ 연산자에 의한 결괏값은 \"</span> <span class=\"token operator\">&lt;&lt;</span> num1 <span class=\"token operator\">+</span> num2 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"입니다.\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// + 연산자에 의한 결괏값은 14입니다.</span>\n\ncout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"- 연산자에 의한 결괏값은 \"</span> <span class=\"token operator\">&lt;&lt;</span> num1 <span class=\"token operator\">-</span> num2 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"입니다.\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// - 연산자에 의한 결괏값은 6입니다.</span>\n\ncout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"* 연산자에 의한 결괏값은 \"</span> <span class=\"token operator\">&lt;&lt;</span> num1 <span class=\"token operator\">*</span> num2 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"입니다.\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// * 연산자에 의한 결괏값은 40입니다.</span>\n\ncout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"/ 연산자에 의한 결괏값은 \"</span> <span class=\"token operator\">&lt;&lt;</span> num1 <span class=\"token operator\">/</span> num2 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"입니다.\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// / 연산자에 의한 결괏값은 2입니다.</span>\n\ncout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"% 연산자에 의한 결괏값은 \"</span> <span class=\"token operator\">&lt;&lt;</span> num1 <span class=\"token operator\">%</span> num2 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"입니다.\"</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// % 연산자에 의한 결괏값은 2입니다.</span></code></pre></div>\n</blockquote>\n<h3 id=\"대입-연산자assignment-operator\" style=\"position:relative;\"><a href=\"#%EB%8C%80%EC%9E%85-%EC%97%B0%EC%82%B0%EC%9E%90assignment-operator\" aria-label=\"대입 연산자assignment operator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>대입 연산자(Assignment Operator)</h3>\n<table>\n<thead>\n<tr>\n<th align=\"center\">대입 연산자</th>\n<th align=\"center\">설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">=</td>\n<td align=\"center\">왼쪽의 피연산자에 오른쪽의 피연산자를 대입함.</td>\n</tr>\n<tr>\n<td align=\"center\">+=</td>\n<td align=\"center\">왼쪽의 피연산자에 오른쪽의 피연산자를 더한 후, </br>그 결괏값을 왼쪽의 피연산자에 대입함.</td>\n</tr>\n<tr>\n<td align=\"center\">-=</td>\n<td align=\"center\">왼쪽의 피연산자에서 오른쪽의 피연산자를 뺀 후, </br>그 결괏값을 왼쪽의 피연산자에 대입함.</td>\n</tr>\n<tr>\n<td align=\"center\">*=</td>\n<td align=\"center\">왼쪽의 피연산자에 오른쪽의 피연산자를 곱한 후, </br>그 결괏값을 왼쪽의 피연산자에 대입함.</td>\n</tr>\n<tr>\n<td align=\"center\">/=</td>\n<td align=\"center\">왼쪽의 피연산자를 오른쪽의 피연산자로 나눈 후, </br>그 결괏값을 왼쪽의 피연산자에 대입함.</td>\n</tr>\n<tr>\n<td align=\"center\">%=</td>\n<td align=\"center\">왼쪽의 피연산자를 오른쪽의 피연산자로 나눈 후, </br>그 나머지를 왼쪽의 피연산자에 대입함.</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>예제</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> num3 <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\n \n\nnum1 <span class=\"token operator\">=</span> num1 <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\nnum2 <span class=\"token operator\">+=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\nnum3 <span class=\"token operator\">=</span><span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\n \n\ncout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"- 연산자에 의한 결괏값은 \"</span> <span class=\"token operator\">&lt;&lt;</span> num1 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"입니다.\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// -  연산자에 의한 결괏값은 13입니다.</span>\n\ncout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"+= 연산자에 의한 결괏값은 \"</span> <span class=\"token operator\">&lt;&lt;</span> num2 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"입니다.\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// += 연산자에 의한 결괏값은 13입니다.</span>\n\ncout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"=+ 연산자에 의한 결괏값은 \"</span> <span class=\"token operator\">&lt;&lt;</span> num3 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"입니다.\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// =+ 연산자에 의한 결괏값은 5입니다.</span></code></pre></div>\n</blockquote>\n<p><strong>주의</strong></p>\n<p>위의 예제에서 num =+ 5 연산은 단순히 숫자 5를 변수 num3에 대입하는 연산이 되었습니다. </br>이처럼 복합 대입 연산자에서 연산자의 순서는 매우 중요하므로 주의를 기울여야 합니다.</p>\n<h3 id=\"논리-연산자logical-operator\" style=\"position:relative;\"><a href=\"#%EB%85%BC%EB%A6%AC-%EC%97%B0%EC%82%B0%EC%9E%90logical-operator\" aria-label=\"논리 연산자logical operator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>논리 연산자(Logical Operator)</h3>\n<table>\n<thead>\n<tr>\n<th align=\"center\">논리 연산자</th>\n<th align=\"center\">설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">&#x26;&#x26;</td>\n<td align=\"center\">논리식이 모두 참이면 1을 반환함. (논리 AND 연산)</td>\n</tr>\n<tr>\n<td align=\"center\">||</td>\n<td align=\"center\">논리식 중에서 하나라도 참이면 1을 반환함. (논리 OR 연산)</td>\n</tr>\n<tr>\n<td align=\"center\">!</td>\n<td align=\"center\">논리식의 결과가 참이면 0을, 거짓이면 1을 반환함. (논리 NOT 연산)</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>예제</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> num2 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">bool</span> result1<span class=\"token punctuation\">,</span> result2<span class=\"token punctuation\">;</span>\n\n \n\nresult1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>num1 <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>num1 <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nresult2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>num2 <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>num2 <span class=\"token operator\">></span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n \n\ncout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"&amp;&amp; 연산자에 의한 결괏값은 \"</span> <span class=\"token operator\">&lt;&lt;</span> result1 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"입니다.\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// &amp;&amp; 연산자에 의한 결괏값은 1입니다.</span>\n\ncout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"|| 연산자에 의한 결괏값은 \"</span> <span class=\"token operator\">&lt;&lt;</span> result2 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"입니다.\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// || 연산자에 의한 결괏값은 1입니다.</span>\n\ncout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" ! 연산자에 의한 결괏값은 \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token operator\">!</span>result2 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"입니다.\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ! 연산자에 의한 결괏값은 0입니다.</span></code></pre></div>\n</blockquote>\n<h3 id=\"삼항-연산자ternary-operator\" style=\"position:relative;\"><a href=\"#%EC%82%BC%ED%95%AD-%EC%97%B0%EC%82%B0%EC%9E%90ternary-operator\" aria-label=\"삼항 연산자ternary operator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>삼항 연산자(Ternary Operator)</h3>\n<blockquote>\n<p>문법</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">조건식 <span class=\"token operator\">?</span> 반환값<span class=\"token function\">1</span><span class=\"token punctuation\">(</span>True<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> 반환값<span class=\"token function\">2</span><span class=\"token punctuation\">(</span>False<span class=\"token punctuation\">)</span></code></pre></div>\n</blockquote>\n<p>물음표(?) 앞의 조건식에 따라 결괏값이 참(true)이면 반환값1을 반환하고, 결괏값이 거짓(false)이면 반환값2를 반환합니다.</p>\n<p>조건문과 같은 방식으로 쓰이며 이를 다음과 같이 조건문으로 바꾸어 쓸 수도 있지만, 조건문에 대한 자세한 내용은 후술하도록 하겠습니다.</p>\n<blockquote>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>조건식<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">{</span>\n    반환값<span class=\"token function\">1</span><span class=\"token punctuation\">(</span>True<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">else</span>\n<span class=\"token punctuation\">{</span>\n    반환값<span class=\"token function\">2</span><span class=\"token punctuation\">(</span>False<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</blockquote>","excerpt":"연산자(Operator) C++은 여러 종류의 연산을 위해 다양한 연산자(operator)를 제공하고 있습니다.  산술연산자(Arithmetic Operator…","tableOfContents":"<ul>\n<li>\n<p><a href=\"/cpp06.md/#%EC%97%B0%EC%82%B0%EC%9E%90operator\">연산자(Operator)</a></p>\n<ul>\n<li><a href=\"/cpp06.md/#%EC%82%B0%EC%88%A0%EC%97%B0%EC%82%B0%EC%9E%90arithmetic-operator\">산술연산자(Arithmetic Operator)</a></li>\n<li><a href=\"/cpp06.md/#%EB%8C%80%EC%9E%85-%EC%97%B0%EC%82%B0%EC%9E%90assignment-operator\">대입 연산자(Assignment Operator)</a></li>\n<li><a href=\"/cpp06.md/#%EB%85%BC%EB%A6%AC-%EC%97%B0%EC%82%B0%EC%9E%90logical-operator\">논리 연산자(Logical Operator)</a></li>\n<li><a href=\"/cpp06.md/#%EC%82%BC%ED%95%AD-%EC%97%B0%EC%82%B0%EC%9E%90ternary-operator\">삼항 연산자(Ternary Operator)</a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/cpp06.md/"},"frontmatter":{"title":"바닥에서 시작하는 C++ (6) - 연산자(Operator)","date":"Feb 27, 2020","tags":["C++"],"keywords":["C","Object-Oriented Programming","객체지향 프로그래밍","operator","연산자","산술연산자","대입연산자","논리연산자","삼항연산자"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/cpp06.md/","series":[],"lastmod":"0001-01-01"}}}