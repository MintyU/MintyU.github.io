{"componentChunkName":"component---src-templates-post-tsx","path":"/cpp09/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"배열array\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4array\" aria-label=\"배열array permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열(Array)</h2>\n<p>배열(array)은 같은 타입의 변수들로 이루어진 유한 집합으로 정의할 수 있습니다.</p>\n<p>배열을 구성하는 각각의 값을 배열 요소(element)라고 하며, 배열에서의 위치를 가리키는 숫자를 인덱스(index)라고 합니다.</p>\n<p>C++에서 인덱스는 언제나 0부터 시작하며, 0을 포함한 양의 정수만을 가질 수 있습니다.</p>\n<p>배열은 같은 종류의 데이터를 많이 다뤄야 하는 경우에 사용할 수 있는 가장 기본적인 자료 구조입니다.</p>\n<p>배열은 선언되는 형식에 따라 1차원 배열, 2차원 배열뿐만 아니라 그 이상의 다차원 배열로도 선언할 수 있습니다.</p>\n<p>하지만 현실적으로 이해하기가 쉬운 2차원 배열까지가 많이 사용됩니다.</p>\n<h3 id=\"배열-선언\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4-%EC%84%A0%EC%96%B8\" aria-label=\"배열 선언 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열 선언</h3>\n<p>배열은 다음과 같이 선언할 수 있습니다.</p>\n<blockquote>\n<p>문법</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">타입 배열이름 <span class=\"token punctuation\">[</span>배열 길이<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n</blockquote>\n<p>변수와 마찬가지로 선언 후 따로 초기화해줄 수도 있으며, 선언과 동시에 초기화해줄 수도 있습니다.</p>\n<blockquote>\n<p>예제</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// 선언 후 초기화</span>\n<span class=\"token keyword\">int</span> arr1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\narr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\narr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\narr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 선언과 동시에 초기화</span>\n<span class=\"token keyword\">int</span> arr2<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> arr3<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\narr3<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">111</span><span class=\"token punctuation\">,</span> <span class=\"token number\">222</span><span class=\"token punctuation\">,</span> <span class=\"token number\">333</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 오류 발생!</span>\n\n<span class=\"token keyword\">int</span> arr0<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// int arr0[3] = {0, 0, 0}와 같다</span></code></pre></div>\n</blockquote>\n<p>주의할 점은, <code class=\"language-text\">arr3</code>처럼 배열을 선언해놓은 후 <code class=\"language-text\">arr3[3] = {111, 222, 333}</code>처럼 초기화는 불가능합니다. </p>\n<p>Curly Bracket(<code class=\"language-text\">{ }</code>)으로 초기화하려면 선언과 동시에 초기화해주어야 합니다.</p>\n<p>뿐만 아니라, <code class=\"language-text\">arr1</code>과 <code class=\"language-text\">arr2</code>의 index 크기가 같다고 해서 다음과 같이 대입할 수 없습니다.</p>\n<p><code class=\"language-text\">arr0</code>처럼 빈 괄호(<code class=\"language-text\">{ }</code>)로 배열을 초기화하면 모든 항목이 0으로 초기화됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">arr1 <span class=\"token operator\">=</span> arr2 <span class=\"token comment\">// 오류 발생!</span></code></pre></div>\n<h3 id=\"배열의-길이\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EC%9D%98-%EA%B8%B8%EC%9D%B4\" aria-label=\"배열의 길이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열의 길이</h3>\n<p>배열의 길이, 즉 원소의 개수를 구하는 방법은 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>배열 이름<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>배열 이름<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>여기서 <code class=\"language-text\">sizeof(arg)</code>함수는 arg의 크기를 byte로 반환하는 함수입니다.</p>\n<p>따라서 <code class=\"language-text\">sizeof(배열 이름)</code>은 배열 전체에 할당된 메모리의 크기를 나타내며, <code class=\"language-text\">sizeof(배열이름[0])</code>은 첫번째 인덱스에 있는 요소의 크기를 나타냅니다.</p>\n<p>배열에는 모두 같은 종류의 요소들이 들어가므로, <code class=\"language-text\">sizeof(배열 이름) / sizeof(배열 이름[0])</code>은 첫번째 인덱스와 같은 크기의 요소들이 배열에 총 몇개 존재하는지를 나타냅니다.</p>\n<p>그렇다면, 만약 다음처럼 index의 길이를 지정해주지 않으면 어떤 일이 일어날까요?</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> noIndex<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>noIndex<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>noIndex<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\ncout <span class=\"token operator\">&lt;&lt;</span> index <span class=\"token comment\">// 5</span></code></pre></div>\n<p>이렇게 배열의 길이를 지정해주지 않게 되면, 배열의 요소 개수에 맞춰 자동으로 배열의 길이가 설정됩니다.</p>\n<h2 id=\"array-template-class\" style=\"position:relative;\"><a href=\"#array-template-class\" aria-label=\"array template class permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Array Template Class?</h2>\n<p>C++11부터는 array의 템플릿 클래스가 추가되었습니다.</p>\n<p><code class=\"language-text\">#include &lt;array&gt;</code>를 통해 기존 C 스타일이 아닌 새로운 형태로 더 간편하게 배열을 정의하고 이용할 수 있습니다.</p>\n<p>다음 포스트에서는 이 내용에 대해 다루도록 하겠습니다.</p>","excerpt":"배열(Array) 배열(array)은 같은 타입의 변수들로 이루어진 유한 집합으로 정의할 수 있습니다. 배열을 구성하는 각각의 값을 배열 요소(element)라고 하며, 배열에서의 위치를 가리키는 숫자를 인덱스(index)라고 합니다. C…","tableOfContents":"<ul>\n<li>\n<p><a href=\"/cpp09/#%EB%B0%B0%EC%97%B4array\">배열(Array)</a></p>\n<ul>\n<li><a href=\"/cpp09/#%EB%B0%B0%EC%97%B4-%EC%84%A0%EC%96%B8\">배열 선언</a></li>\n<li><a href=\"/cpp09/#%EB%B0%B0%EC%97%B4%EC%9D%98-%EA%B8%B8%EC%9D%B4\">배열의 길이</a></li>\n</ul>\n</li>\n<li><a href=\"/cpp09/#array-template-class\">Array Template Class?</a></li>\n</ul>","fields":{"slug":"/cpp09/"},"frontmatter":{"title":"바닥부터 시작하는 C++ (9) - 배열(C style)","date":"Mar 10, 2020","tags":["C++"],"keywords":["C++","C","Object-Oriented Programming","객체지향 프로그래밍","배열","Array"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/cpp09/","series":[],"lastmod":"0001-01-01"}}}