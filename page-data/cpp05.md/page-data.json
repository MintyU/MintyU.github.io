{"componentChunkName":"component---src-templates-post-tsx","path":"/cpp05.md/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"상수\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%88%98\" aria-label=\"상수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상수</h2>\n<p>상수(constant)란 변수와 마찬가지로 데이터를 저장할 수 있는 메모리 공간을 의미합니다.</p>\n<p>하지만 상수가 변수와 다른 점은 프로그램이 실행되는 동안 메모리에 저장된 데이터를 변경할 수 없다는 점입니다.</p>\n<p>C++에서 상수는 표현 방식에 따라 다음과 같이 나눌 수 있습니다.</p>\n<ol>\n<li>리터럴 상수(literal constant)</li>\n<li>심볼릭 상수(symbolic constant)</li>\n</ol>\n<h2 id=\"리터럴-상수\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%ED%84%B0%EB%9F%B4-%EC%83%81%EC%88%98\" aria-label=\"리터럴 상수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리터럴 상수</h2>\n<p>리터럴(Literal)은 변수에 넣는 변하지 않는 데이터를 말합니다.</p>\n<blockquote>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">a <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></code></pre></div>\n</blockquote>\n<p>이 코드에서 5는 리터럴 상수입니다.</p>\n<p>리터럴 상수는 정수, 부동 소수점, 문자, 문자열, Boolean, 포인터 및 사용자가 정의한 리터럴로 분류 할 수 있습니다.</p>\n<h3 id=\"정수-숫자\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%88%98-%EC%88%AB%EC%9E%90\" aria-label=\"정수 숫자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정수 숫자</h3>\n<blockquote>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token number\">231</span>\n\n<span class=\"token number\">5542</span>\n\n<span class=\"token operator\">-</span><span class=\"token number\">43</span></code></pre></div>\n</blockquote>\n<p>정숫값을 식별하는 숫자 상수입니다. 인용 부호나 다른 특수 문자로 묶여 있지 않습니다.</p>\n<p>231은 문자 그대로 항상 231이라는 수 자체를 나타냅니다.</p>\n<h3 id=\"부동-소수점-숫자\" style=\"position:relative;\"><a href=\"#%EB%B6%80%EB%8F%99-%EC%86%8C%EC%88%98%EC%A0%90-%EC%88%AB%EC%9E%90\" aria-label=\"부동 소수점 숫자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>부동 소수점 숫자</h3>\n<p>소수점과 지수로 실제 값을 표현합니다.</p>\n<blockquote>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token number\">3.14159</span>    <span class=\"token comment\">// 3.14159</span>\n\n<span class=\"token number\">6.02e23</span>    <span class=\"token comment\">// 6.02 x 10^23</span>\n\n<span class=\"token number\">1.6e-19</span>    <span class=\"token comment\">// 1.6 x 10^-19</span>\n\n<span class=\"token number\">3.0</span>        <span class=\"token comment\">// 3.0</span></code></pre></div>\n</blockquote>\n<h3 id=\"문자-및-문자열-리터럴\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%9E%90-%EB%B0%8F-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%A6%AC%ED%84%B0%EB%9F%B4\" aria-label=\"문자 및 문자열 리터럴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문자 및 문자열 리터럴</h3>\n<p>문자 및 문자열 리터럴은 따옴표로 묶습니다.</p>\n<blockquote>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token string\">'z'</span>\n\n<span class=\"token string\">'q'</span>\n\n<span class=\"token string\">\"Hello world\"</span>\n\n<span class=\"token string\">\"KHU Software Convergence\"</span></code></pre></div>\n</blockquote>\n<p>처음 두 표현식은 단일 문자 리터럴을 나타내고, 다음 두 표현식은 여러 문자로 구성된 문자열 리터럴을 나타냅니다.</p>\n<p>단일 문자를 나타내려면 작은 따옴표(<code class=\"language-text\">&#39;</code>)로 묶고 문자열을 나타내려면 큰따옴표(<code class=\"language-text\">&quot;</code>)로 문자를 묶습니다.</p>\n<h3 id=\"그-외의-리터럴\" style=\"position:relative;\"><a href=\"#%EA%B7%B8-%EC%99%B8%EC%9D%98-%EB%A6%AC%ED%84%B0%EB%9F%B4\" aria-label=\"그 외의 리터럴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그 외의 리터럴</h3>\n<p>C++에는 세 가지 키워드 리터럴(true, false, nullptr)이 있습니다.</p>\n<ul>\n<li>bool 유형의 변수에는 true와 false만 사용이 가능합니다.</li>\n<li>nullptr은 null 포인터 값 입니다.</li>\n</ul>\n<h2 id=\"상수-표현식\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%88%98-%ED%91%9C%ED%98%84%EC%8B%9D\" aria-label=\"상수 표현식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상수 표현식</h2>\n<p>다음처럼 <code class=\"language-text\">const</code>를 사용하여 상수를 정의할 수도 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">const</span> <span class=\"token keyword\">double</span> pi <span class=\"token operator\">=</span> <span class=\"token number\">3.1415926</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> tab <span class=\"token operator\">=</span> <span class=\"token string\">'\\t'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"전처리기-정의-define\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%98%EB%A6%AC%EA%B8%B0-%EC%A0%95%EC%9D%98-define\" aria-label=\"전처리기 정의 define permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전처리기 정의 (#define)</h2>\n<blockquote>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> PI 3.14159</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> NEWLINE '\\n'</span></code></pre></div>\n</blockquote>\n<p><strong>#define은 전 처리기 지시문이며, 끝에 세미콜론(<code class=\"language-text\">;</code>)이 필요하지 않습니다.</strong></p>","excerpt":"상수 상수(constant)란 변수와 마찬가지로 데이터를 저장할 수 있는 메모리 공간을 의미합니다. 하지만 상수가 변수와 다른 점은 프로그램이 실행되는 동안 메모리에 저장된 데이터를 변경할 수 없다는 점입니다. C…","tableOfContents":"<ul>\n<li><a href=\"/cpp05.md/#%EC%83%81%EC%88%98\">상수</a></li>\n<li>\n<p><a href=\"/cpp05.md/#%EB%A6%AC%ED%84%B0%EB%9F%B4-%EC%83%81%EC%88%98\">리터럴 상수</a></p>\n<ul>\n<li><a href=\"/cpp05.md/#%EC%A0%95%EC%88%98-%EC%88%AB%EC%9E%90\">정수 숫자</a></li>\n<li><a href=\"/cpp05.md/#%EB%B6%80%EB%8F%99-%EC%86%8C%EC%88%98%EC%A0%90-%EC%88%AB%EC%9E%90\">부동 소수점 숫자</a></li>\n<li><a href=\"/cpp05.md/#%EB%AC%B8%EC%9E%90-%EB%B0%8F-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%A6%AC%ED%84%B0%EB%9F%B4\">문자 및 문자열 리터럴</a></li>\n<li><a href=\"/cpp05.md/#%EA%B7%B8-%EC%99%B8%EC%9D%98-%EB%A6%AC%ED%84%B0%EB%9F%B4\">그 외의 리터럴</a></li>\n</ul>\n</li>\n<li><a href=\"/cpp05.md/#%EC%83%81%EC%88%98-%ED%91%9C%ED%98%84%EC%8B%9D\">상수 표현식</a></li>\n<li><a href=\"/cpp05.md/#%EC%A0%84%EC%B2%98%EB%A6%AC%EA%B8%B0-%EC%A0%95%EC%9D%98-define\">전처리기 정의 (#define)</a></li>\n</ul>","fields":{"slug":"/cpp05.md/"},"frontmatter":{"title":"바닥부터 시작하는 C++ (5) - 상수","date":"Feb 23, 2020","tags":["C++"],"keywords":["C++","C","Object-Oriented Programming","객체지향 프로그래밍","Constant","상수"]}}},"pageContext":{"slug":"/cpp05.md/","series":[]}}}