{"componentChunkName":"component---src-pages-index-tsx","path":"/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"excerpt":"Alfred 오늘 소개할 어플은 Alfred입니다.  원래 Paste2를 사용하고 있었는데, 갑자기 구독형으로 정책을 바꾸는바람에 대체 앱을 서칭하다 발견했습니다. (비싸긴 하지만)Paste2보다 훨씬 기능도 강력하고, 무엇보다도 'Snippet…","fields":{"slug":"/Alfred.md/"},"frontmatter":{"date":"Apr 04, 2020","update":"Jan 01, 0001","title":"MAC 필수 어플 - Alfred(Snippet)","tags":["MAC"]}}},{"node":{"excerpt":"2주차 Linux(Ubuntu)로 살아보기  18.04버전의 화면 모습입니다. 알아보니 원래 Ubuntu는 'GNOME'이라는 데스크탑 환경을 채택했다가, 'Unity'환경으로 바꾸었었고, 이제 다시 18.04버전부터 'Unity…","fields":{"slug":"/linux2.md/"},"frontmatter":{"date":"Mar 29, 2020","update":"Jan 01, 0001","title":"Linux(Ubuntu)로 살아보기 (2) - Unite, Caffeine","tags":["Ubuntu","Linux"]}}},{"node":{"excerpt":"Linux로 살아보기 'Linux로 살아보기'라는 과제를 받았습니다. Linux 운영체제를 설치하고, 그 위에서 직접 일주일에 한 개 이상씩의 프로그램들을 설치하고 실행시켜보면서 Linux…","fields":{"slug":"/UbuntuInstall.md/"},"frontmatter":{"date":"Mar 22, 2020","update":"Jan 01, 0001","title":"Linux(Ubuntu)로 살아보기 (1) - 설치 및 설정","tags":["Ubuntu","Linux"]}}},{"node":{"excerpt":"MAC OS를 사용하는 경우, iTerm에서 VSCode를 간단한 명령어로 호출할 수 있습니다. 다음과 같이 열고자 하는 디렉토리 내에서 라는 명령어를 입력해주면 현재 경로로 VSCode가 실행됩니다.  Setting…","fields":{"slug":"/VSCodeShortCut.md/"},"frontmatter":{"date":"Mar 06, 2020","update":"Jan 01, 0001","title":"iTerm(Using Zsh)에서 VSCode 열기 [MAC OS]","tags":["MAC"]}}},{"node":{"excerpt":"반복문(Iteration Statements…","fields":{"slug":"/cpp08.md/"},"frontmatter":{"date":"Mar 05, 2020","update":"Jan 01, 0001","title":"바닥에서 시작하는 C++ (8) - 반복문","tags":["C++"]}}},{"node":{"excerpt":"문제 피보나치 수는 0과 1로 시작한다. 0번째 피보나치 수는 0이고, 1번째 피보나치 수는 1이다. 그 다음 2번째 부터는 바로 앞 두 피보나치 수의 합이 된다. 이를 식으로 써보면 F(n) = F(n-1) + F(n-2) (n>=2)가 된다. n…","fields":{"slug":"/BOJ02747.md/"},"frontmatter":{"date":"Mar 02, 2020","update":"Jan 01, 0001","title":"백준 [2747] - 피보나치 수(C++)","tags":["백준알고리즘(C++)"]}}},{"node":{"excerpt":"조건문(Conditional Statements) 조건문은 주어진 조건식의 결과에 따라 별도의 명령을 수행하도록 제어하는 명령문입니다. C++에서 사용하는 대표적인 조건문의 형태는 다음과 같습니다. if 문 if / else 문 if / else if…","fields":{"slug":"/cpp07.md/"},"frontmatter":{"date":"Feb 29, 2020","update":"Jan 01, 0001","title":"바닥에서 시작하는 C++ (7) - 조건문","tags":["C++"]}}},{"node":{"excerpt":"연산자(Operator) C++은 여러 종류의 연산을 위해 다양한 연산자(operator)를 제공하고 있습니다.  산술연산자(Arithmetic Operator…","fields":{"slug":"/cpp06.md/"},"frontmatter":{"date":"Feb 27, 2020","update":"Jan 01, 0001","title":"바닥에서 시작하는 C++ (6) - 연산자(Operator)","tags":["C++"]}}},{"node":{"excerpt":"상수 상수(constant)란 변수와 마찬가지로 데이터를 저장할 수 있는 메모리 공간을 의미합니다. 하지만 상수가 변수와 다른 점은 프로그램이 실행되는 동안 메모리에 저장된 데이터를 변경할 수 없다는 점입니다. C…","fields":{"slug":"/cpp05.md/"},"frontmatter":{"date":"Feb 23, 2020","update":"Jan 01, 0001","title":"바닥부터 시작하는 C++ (5) - 상수","tags":["C++"]}}},{"node":{"excerpt":"변수(Variable) 변수(variable)란 데이터(data)를 저장하기 위해 프로그램에 의해 이름을 할당받은 메모리 공간을 의미합니다. 즉, 변수란 데이터(data…","fields":{"slug":"/cpp04.md/"},"frontmatter":{"date":"Feb 20, 2020","update":"Jan 01, 0001","title":"바닥부터 시작하는 C++ (4) - 변수","tags":["C++"]}}},{"node":{"excerpt":"iostream(Input/Output Stream) 사용자가 프로그램과 대화하기 위해서는 사용자와 프로그램 사이의 입출력을 담당하는 수단이 필요합니다. C++의 모든 것은 객체로 표현되므로, 입출력을 담당하는 수단 또한 C…","fields":{"slug":"/cpp03.md/"},"frontmatter":{"date":"Feb 18, 2020","update":"Jan 01, 0001","title":"바닥부터 시작하는 C++ (3) - iostream","tags":["C++"]}}},{"node":{"excerpt":"네임스페이스(Namespace) 네임스페이스란 이름이 기억되는 영역을 뜻하며, 이름이 소속된 공간을 의미합니다. 네임스페이스는 C++ 프로그램을 작성할 때 발생하는 이름에 대한 충돌을 방지해 주는 방법을 제공합니다. 이러한 네임스페이스는 C…","fields":{"slug":"/cpp02.md/"},"frontmatter":{"date":"Feb 16, 2020","update":"Jan 01, 0001","title":"바닥부터 시작하는 C++ (2) - 네임스페이스, 주석","tags":["C++"]}}},{"node":{"excerpt":"C++의 특징 C++이 프로그래밍 언어로써 가지는 특징은 다음과 같습니다. C++은 절차 지향적이며 구조적 프로그래밍 언어입니다. C++은 객체 지향 프로그래밍 언어입니다. C++은 일반화 프로그래밍 언어입니다. 이처럼 C…","fields":{"slug":"/cpp01.md/"},"frontmatter":{"date":"Feb 14, 2020","update":"Jan 01, 0001","title":"바닥부터 시작하는 C++ (1) - 기본 특징","tags":["C++"]}}}]}},"pageContext":{}}}