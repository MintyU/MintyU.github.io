{"componentChunkName":"component---src-templates-post-tsx","path":"/cpp07.md/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"조건문conditional-statements\" style=\"position:relative;\"><a href=\"#%EC%A1%B0%EA%B1%B4%EB%AC%B8conditional-statements\" aria-label=\"조건문conditional statements permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>조건문(Conditional Statements)</h2>\n<p>조건문은 주어진 조건식의 결과에 따라 별도의 명령을 수행하도록 제어하는 명령문입니다.</p>\n<p>C++에서 사용하는 대표적인 조건문의 형태는 다음과 같습니다.</p>\n<ol>\n<li>if 문</li>\n<li>if / else 문</li>\n<li>if / else if / else 문</li>\n<li>switch 문</li>\n</ol>\n<h3 id=\"if-문\" style=\"position:relative;\"><a href=\"#if-%EB%AC%B8\" aria-label=\"if 문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>if 문</h3>\n<p>if 문은 조건식의 결과가 참(true)이면 주어진 명령문을 실행하며, 거짓(false)이면 아무것도 실행하지 않습니다.</p>\n<p>C++에서 if문의 문법은 다음과 같습니다.</p>\n<blockquote>\n<p>문법</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>조건식<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">{</span>\n\n    조건식의 결과가 참일 때 실행하고자 하는 명령문<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n</blockquote>\n<p>위의 코드에서 블록에 속한 명령문은 중괄호({})를 기준으로 오른쪽으로 들여쓰기가 되어 있는 것을 볼 수 있습니다.</p>\n<p>이처럼 들여쓰기를 통해 코드의 가독성을 높이는 것을 인덴트(indent)라고 하며, 될 수 있으면 모든 코드를 인덴트하는 것이 좋습니다.</p>\n<h3 id=\"if--else-문\" style=\"position:relative;\"><a href=\"#if--else-%EB%AC%B8\" aria-label=\"if  else 문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>if / else 문</h3>\n<p>if 문과 함께 사용하는 else 문은 if 문과는 반대로 주어진 조건식의 결과가 거짓(false)이면 주어진 명령문을 실행합니다.</p>\n<p>C++에서 if / else 문의 문법은 다음과 같습니다.</p>\n<blockquote>\n<p>문법</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>조건식<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">{</span>\n\n    조건식의 결과가 참일 때 실행하고자 하는 명령문<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">else</span>\n\n<span class=\"token punctuation\">{</span>\n\n    조건식의 결과가 거짓일 때 실행하고자 하는 명령문<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n</blockquote>\n<p>위 식은 <a href=\"https://mintyu.github.io/cpp06.md/#%EC%82%BC%ED%95%AD-%EC%97%B0%EC%82%B0%EC%9E%90ternary-operator\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">여기</a>에 설명했듯 아래 식처럼 삼항연산자를 통해 짧게 나타낼 수도 있습니다.</p>\n<blockquote>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">조건식 <span class=\"token operator\">?</span> 반환값<span class=\"token function\">1</span><span class=\"token punctuation\">(</span>True<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> 반환값<span class=\"token function\">2</span><span class=\"token punctuation\">(</span>False<span class=\"token punctuation\">)</span></code></pre></div>\n</blockquote>\n<h3 id=\"if--else-if--else-문\" style=\"position:relative;\"><a href=\"#if--else-if--else-%EB%AC%B8\" aria-label=\"if  else if  else 문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>if / else if / else 문</h3>\n<p>if / else if / else 문은 마치 새로운 구문처럼 보이지만, 사실은 두 개의 if / else 문이 연달아 나온 것뿐입니다.</p>\n<p>이러한 if / else if / else 문은 조건식을 여러 개 명시할 수 있으므로 중첩된 if 문을 좀 더 간결하게 표현할 수 있습니다.</p>\n<p>if / else if / else 문의 문법은 다음과 같습니다.</p>\n<blockquote>\n<p>문법</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>조건식<span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">{</span>\n\n    조건식<span class=\"token number\">1</span>의 결과가 참일 때 실행하고자 하는 명령문<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>조건식<span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">{</span>\n\n    조건식<span class=\"token number\">2</span>의 결과가 참일 때 실행하고자 하는 명령문<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">else</span>\n\n<span class=\"token punctuation\">{</span>\n\n    조건식<span class=\"token number\">1</span>의 결과도 거짓이고<span class=\"token punctuation\">,</span> 조건식<span class=\"token number\">2</span>의 결과도 거짓일 때 실행하고자 하는 명령문<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n</blockquote>\n<p><strong>실행될 명령어가 한줄 뿐이라면 중괄호<code class=\"language-text\">{ }</code>를 생략해서 쓸 수 있습니다.</strong></p>\n<h3 id=\"switch-문\" style=\"position:relative;\"><a href=\"#switch-%EB%AC%B8\" aria-label=\"switch 문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>switch 문</h3>\n<p>switch 문은 if / else 문과 마찬가지로 주어진 조건 값의 결과에 따라 프로그램이 다른 명령을 수행하도록 하는 조건문입니다.</p>\n<p>이러한 switch 문은 if / else 문보다 가독성이 더 좋으며, 컴파일러가 최적화를 쉽게 할 수 있어 속도 또한 빠른 편입니다.</p>\n<p>하지만, switch 문의 조건 값으로는 char형, short형, int형 변수나 리터럴과 나중에 배우게 될 열거체까지 사용할 수 있습니다.</p>\n<p>따라서 if / else 문보다는 사용할 수 있는 상황이 적은 편입니다.</p>\n<p>C++에서 switch 문의 문법은 다음과 같습니다.</p>\n<blockquote>\n<p>문법</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>조건 값<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">case</span> 값<span class=\"token number\">1</span><span class=\"token operator\">:</span>\n\n        조건 값이 값<span class=\"token number\">1</span>일 때 실행하고자 하는 명령문<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">case</span> 값<span class=\"token number\">1</span><span class=\"token operator\">:</span>\n\n        조건 값이 값<span class=\"token number\">2</span>일 때 실행하고자 하는 명령문<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\n        조건 값이 어떠한 <span class=\"token keyword\">case</span> 절에도 해당하지 않을 때 실행하고자 하는 명령문<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n</blockquote>\n<p>default 절은 조건 값이 위에 나열된 어떠한 case 절에도 해당하지 않을 때만 실행됩니다.</p>\n<p>이 절은 반드시 존재해야 하는 것은 아니며 필요할 때만 선언할 수 있습니다.</p>\n<p>또한, default 절의 위치가 꼭 switch 문의 맨 마지막일 필요는 없습니다.</p>\n<blockquote>\n<p>예제</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"입력하신 수는 1입니다.\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"입력하신 수는 2입니다.\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span>\n\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"입력하신 수는 3입니다.\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span>\n\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"입력하신 수는 4입니다.\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span>\n\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"입력하신 수는 5입니다.\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"1부터 5까지의 수만 입력해 주세요!\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n</blockquote>\n<p>각 case 절 및 default 절은 반드시 break 키워드를 포함하고 있어야 합니다.</p>\n<p>break 키워드는 조건 값에 해당하는 case 절이나 default 절이 실행된 뒤에 전체 switch 문을 빠져나가게 해줍니다.</p>\n<p>만약에 break 키워드가 없다면, 조건에 해당하는 switch 문의 case 절 이후의 모든 case 절이 전부 실행될 것입니다.</p>","excerpt":"조건문(Conditional Statements) 조건문은 주어진 조건식의 결과에 따라 별도의 명령을 수행하도록 제어하는 명령문입니다. C++에서 사용하는 대표적인 조건문의 형태는 다음과 같습니다. if 문 if / else 문 if / else if…","tableOfContents":"<ul>\n<li>\n<p><a href=\"/cpp07.md/#%EC%A1%B0%EA%B1%B4%EB%AC%B8conditional-statements\">조건문(Conditional Statements)</a></p>\n<ul>\n<li><a href=\"/cpp07.md/#if-%EB%AC%B8\">if 문</a></li>\n<li><a href=\"/cpp07.md/#if--else-%EB%AC%B8\">if / else 문</a></li>\n<li><a href=\"/cpp07.md/#if--else-if--else-%EB%AC%B8\">if / else if / else 문</a></li>\n<li><a href=\"/cpp07.md/#switch-%EB%AC%B8\">switch 문</a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/cpp07.md/"},"frontmatter":{"title":"바닥에서 시작하는 C++ (7) - 조건문","date":"Feb 29, 2020","tags":["C++"],"keywords":["C","Object-Oriented Programming","객체지향 프로그래밍","조건문","conditional statements","if","else","switch"]}}},"pageContext":{"slug":"/cpp07.md/","series":[]}}}