{"componentChunkName":"component---src-templates-post-tsx","path":"/cpp02/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"네임스페이스namespace\" style=\"position:relative;\"><a href=\"#%EB%84%A4%EC%9E%84%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4namespace\" aria-label=\"네임스페이스namespace permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네임스페이스(Namespace)</h2>\n<p>네임스페이스란 이름이 기억되는 영역을 뜻하며, 이름이 소속된 공간을 의미합니다.</p>\n<p>네임스페이스는 C++ 프로그램을 작성할 때 발생하는 이름에 대한 충돌을 방지해 주는 방법을 제공합니다.</p>\n<p>이러한 네임스페이스는 C언어에는 없는 C++ 만의 새로운 기능입니다.</p>\n<p>C++ 프로그램의 표준 구성 요소인 클래스, 함수, 변수 등은 std라는 이름 공간에 저장되어 있습니다.</p>\n<p>따라서 C++ 프로그램에서 표준 헤더 파일인 iostream 내의 정의를 사용하려면 다음과 같이 사용해야 합니다.</p>\n<blockquote>\n<p>예제</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TEXT \"Welcome to C++ Programming!!\"</span>\n\n \n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">{</span>\n\n    std<span class=\"token operator\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> TEXT<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n</blockquote>\n<p>위의 예제처럼 std라는 네임스페이스에 있는 정의를 사용하려면, std:: 접두어를 붙여 해당 정의가 std라는 네임스페이스에 있다는 것을 컴파일러에 알려줘야 합니다.</p>\n<p>이러한 네임스페이스에 속한 정의를 간단하게 사용하려면 다음과 같은 명령문을 추가하면 됩니다.</p>\n<blockquote>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span> <span class=\"token comment\">// std라는 네임스페이스에 속한 정의들은 네임스페이스 이름을 붙이지 않아도 사용할 수 있음.</span></code></pre></div>\n</blockquote>\n<p>다음 예제는 앞서 살펴본 예제와 정확히 같은 동작을 수행합니다.</p>\n<blockquote>\n<p>예제</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TEXT \"Welcome to C++ Programming!!\"</span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n \n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">{</span>\n\n    cout <span class=\"token operator\">&lt;&lt;</span> TEXT<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n</blockquote>\n<h2 id=\"주석\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%84%9D\" aria-label=\"주석 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주석</h2>\n<p>주석이란 코드에 대한 이해를 돕는 설명을 적거나 디버깅을 위해 작성하는 일종의 메모입니다.</p>\n<p>C++ 컴파일러는 주석은 무시하고 컴파일하므로, 실행 파일에서는 이러한 주석을 확인할 수 없습니다.</p>\n<p>C++에서 주석을 작성하는 문법은 다음과 같습니다.</p>\n<blockquote>\n<p>문법</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// 한 줄 주석</span>\n\n<span class=\"token comment\">/*\n\n여러 줄 주석\n\n*/</span></code></pre></div>\n</blockquote>\n<p>C++에서는 여러 줄 주석 안에 또 다른 한 줄 주석을 삽입할 수 있습니다.\n하지만 여러 줄 주석 안에 또 다른 여러 줄 주석은 중첩해서 삽입할 수는 없습니다.</p>\n<blockquote>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">/*\n\n여러 줄 주석\n\n//한 줄 주석 삽입 가능!\n\n*/</span>\n\n\n<span class=\"token comment\">/*\n\n여러 줄 주석\n\n/*여러 줄 주석 삽입 불가*/</span>\n\n<span class=\"token operator\">*</span><span class=\"token operator\">/</span></code></pre></div>\n</blockquote>\n<p>위의 예제 마지막 줄 */는 주석으로 처리되지 않은 것을 확인할 수 있습니다.</p>","excerpt":"네임스페이스(Namespace) 네임스페이스란 이름이 기억되는 영역을 뜻하며, 이름이 소속된 공간을 의미합니다. 네임스페이스는 C++ 프로그램을 작성할 때 발생하는 이름에 대한 충돌을 방지해 주는 방법을 제공합니다. 이러한 네임스페이스는 C…","tableOfContents":"<ul>\n<li><a href=\"/cpp02/#%EB%84%A4%EC%9E%84%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4namespace\">네임스페이스(Namespace)</a></li>\n<li><a href=\"/cpp02/#%EC%A3%BC%EC%84%9D\">주석</a></li>\n</ul>","fields":{"slug":"/cpp02/"},"frontmatter":{"title":"바닥부터 시작하는 C++ (2) - 네임스페이스, 주석","date":"Feb 16, 2020","tags":["C++"],"keywords":["C++","C","Object-Oriented Programming","객체지향 프로그래밍","namespace","네임스페이스","comment","주석"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/cpp02/","series":[],"lastmod":"0001-01-01"}}}