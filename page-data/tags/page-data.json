{"componentChunkName":"component---src-pages-tags-tsx","path":"/tags/","result":{"data":{"allMarkdownRemark":{"group":[{"fieldValue":"BOJ(C++)","totalCount":2,"edges":[{"node":{"excerpt":"문제 정보 제한 시간 제한 : 2초 메모리 제한 : 512MB 출처 Olympiad > USA Computing Olympiad > 2016-2017 Season > USACO 2017 February Contest > Bronze…","fields":{"slug":"/BOJ14467/"},"frontmatter":{"date":"Jul 04, 2020","update":"Jan 01, 0001","title":"백준 [14467] - 소가 길을 건너간 이유 1","tags":["BOJ(C++)"]}}},{"node":{"excerpt":"문제 정보 제한 시간 제한 : 1초(추가 시간 없음) 메모리 제한 : 128MB 알고리즘 분류 수학 구현 문제 피보나치 수는 0과 1로 시작한다. 0번째 피보나치 수는 0이고, 1번째 피보나치 수는 1이다. 그 다음…","fields":{"slug":"/BOJ02747/"},"frontmatter":{"date":"Mar 02, 2020","update":"Jan 01, 0001","title":"백준 [2747] - 피보나치 수(C++)","tags":["BOJ(C++)"]}}}]},{"fieldValue":"Bot","totalCount":1,"edges":[{"node":{"excerpt":"카카오톡 봇 게임 캐릭터 정보를 확인하기 위해 따로 인터넷 검색을 해야 하는 번거로운 작업을 줄이고, 간단한 편의성 기능을 제공하기 위해 개인적으로 사용할 목적의 카카오톡 봇을 만들어보기로 결심했습니다. 봇 최초 컴파일(3월 7일) 이후…","fields":{"slug":"/KakaoBot_1/"},"frontmatter":{"date":"Mar 22, 2022","update":"Jan 01, 0001","title":"카카오톡 봇 제작기 (1) - 구동 원리, 준비물","tags":["Bot","KakaoTalk"]}}}]},{"fieldValue":"C++","totalCount":12,"edges":[{"node":{"excerpt":"fstream C++에서 입력과 출력을 관리하기 위해 사용했던 헤더파일과 마찬가지로, 파일을 통한 데이터 입출력을 관리하는 헤더 파일은 으로 정의되어 있습니다. 또한, 에서 입력은 istream, 출력은 ostream이라는 Class…","fields":{"slug":"/cpp12/"},"frontmatter":{"date":"Apr 07, 2020","update":"Jan 01, 0001","title":"바닥에서 시작하는 C++ (12) - 파일 입출력","tags":["C++"]}}},{"node":{"excerpt":"C++의 문자열? C++은 문자열을 쉽게 다룰 수 있는 String Class를 제공합니다. C++에서 String Class를 사용하기 위해서는 String 헤더 파일을 포함해야 합니다. 또한, String Class는 std namespace…","fields":{"slug":"/cpp11/"},"frontmatter":{"date":"Apr 04, 2020","update":"Jan 01, 0001","title":"바닥에서 시작하는 C++ (11) - 문자열(String)","tags":["C++"]}}},{"node":{"excerpt":"What is STL? STL(Standard Template Library)는 표준 C++ Library입니다. 프로그램에 필요한 자료구조와 알고리즘을 Template로 제공해줍니다. 이 포스트에서 설명할 array Template는 STL…","fields":{"slug":"/cpp10/"},"frontmatter":{"date":"Mar 15, 2020","update":"Jan 01, 0001","title":"바닥부터 시작하는 C++ (10) - 배열(STL)","tags":["C++"]}}},{"node":{"excerpt":"배열(Array) 배열(array)은 같은 타입의 변수들로 이루어진 유한 집합으로 정의할 수 있습니다. 배열을 구성하는 각각의 값을 배열 요소(element)라고 하며, 배열에서의 위치를 가리키는 숫자를 인덱스(index)라고 합니다. C…","fields":{"slug":"/cpp09/"},"frontmatter":{"date":"Mar 10, 2020","update":"Jan 01, 0001","title":"바닥부터 시작하는 C++ (9) - 배열(C style)","tags":["C++"]}}},{"node":{"excerpt":"반복문(Iteration Statements…","fields":{"slug":"/cpp08/"},"frontmatter":{"date":"Mar 05, 2020","update":"Jan 01, 0001","title":"바닥에서 시작하는 C++ (8) - 반복문","tags":["C++"]}}},{"node":{"excerpt":"조건문(Conditional Statements) 조건문은 주어진 조건식의 결과에 따라 별도의 명령을 수행하도록 제어하는 명령문입니다. C++에서 사용하는 대표적인 조건문의 형태는 다음과 같습니다. if 문 if / else 문 if / else if…","fields":{"slug":"/cpp07/"},"frontmatter":{"date":"Feb 29, 2020","update":"Jan 01, 0001","title":"바닥에서 시작하는 C++ (7) - 조건문","tags":["C++"]}}},{"node":{"excerpt":"연산자(Operator) C++은 여러 종류의 연산을 위해 다양한 연산자(operator)를 제공하고 있습니다.  산술연산자(Arithmetic Operator…","fields":{"slug":"/cpp06/"},"frontmatter":{"date":"Feb 27, 2020","update":"Jan 01, 0001","title":"바닥에서 시작하는 C++ (6) - 연산자(Operator)","tags":["C++"]}}},{"node":{"excerpt":"상수 상수(constant)란 변수와 마찬가지로 데이터를 저장할 수 있는 메모리 공간을 의미합니다. 하지만 상수가 변수와 다른 점은 프로그램이 실행되는 동안 메모리에 저장된 데이터를 변경할 수 없다는 점입니다. C…","fields":{"slug":"/cpp05/"},"frontmatter":{"date":"Feb 23, 2020","update":"Jan 01, 0001","title":"바닥부터 시작하는 C++ (5) - 상수","tags":["C++"]}}},{"node":{"excerpt":"변수(Variable) 변수(variable)란 데이터(data)를 저장하기 위해 프로그램에 의해 이름을 할당받은 메모리 공간을 의미합니다. 즉, 변수란 데이터(data…","fields":{"slug":"/cpp04/"},"frontmatter":{"date":"Feb 20, 2020","update":"Jan 01, 0001","title":"바닥부터 시작하는 C++ (4) - 변수","tags":["C++"]}}},{"node":{"excerpt":"iostream(Input/Output Stream) 사용자가 프로그램과 대화하기 위해서는 사용자와 프로그램 사이의 입출력을 담당하는 수단이 필요합니다. C++의 모든 것은 객체로 표현되므로, 입출력을 담당하는 수단 또한 C…","fields":{"slug":"/cpp03/"},"frontmatter":{"date":"Feb 18, 2020","update":"Jan 01, 0001","title":"바닥부터 시작하는 C++ (3) - iostream","tags":["C++"]}}},{"node":{"excerpt":"네임스페이스(Namespace) 네임스페이스란 이름이 기억되는 영역을 뜻하며, 이름이 소속된 공간을 의미합니다. 네임스페이스는 C++ 프로그램을 작성할 때 발생하는 이름에 대한 충돌을 방지해 주는 방법을 제공합니다. 이러한 네임스페이스는 C…","fields":{"slug":"/cpp02/"},"frontmatter":{"date":"Feb 16, 2020","update":"Jan 01, 0001","title":"바닥부터 시작하는 C++ (2) - 네임스페이스, 주석","tags":["C++"]}}},{"node":{"excerpt":"C++의 특징 C++이 프로그래밍 언어로써 가지는 특징은 다음과 같습니다. C++은 절차 지향적이며 구조적 프로그래밍 언어입니다. C++은 객체 지향 프로그래밍 언어입니다. C++은 일반화 프로그래밍 언어입니다. 이처럼 C…","fields":{"slug":"/cpp01/"},"frontmatter":{"date":"Feb 14, 2020","update":"Jan 01, 0001","title":"바닥부터 시작하는 C++ (1) - 기본 특징","tags":["C++"]}}}]},{"fieldValue":"KakaoTalk","totalCount":1,"edges":[{"node":{"excerpt":"카카오톡 봇 게임 캐릭터 정보를 확인하기 위해 따로 인터넷 검색을 해야 하는 번거로운 작업을 줄이고, 간단한 편의성 기능을 제공하기 위해 개인적으로 사용할 목적의 카카오톡 봇을 만들어보기로 결심했습니다. 봇 최초 컴파일(3월 7일) 이후…","fields":{"slug":"/KakaoBot_1/"},"frontmatter":{"date":"Mar 22, 2022","update":"Jan 01, 0001","title":"카카오톡 봇 제작기 (1) - 구동 원리, 준비물","tags":["Bot","KakaoTalk"]}}}]},{"fieldValue":"Linux(Ubuntu)","totalCount":2,"edges":[{"node":{"excerpt":"2주차 Linux(Ubuntu)로 살아보기  18.04버전의 화면 모습입니다. 알아보니 원래 Ubuntu는 'GNOME'이라는 데스크탑 환경을 채택했다가, 'Unity'환경으로 바꾸었었고, 이제 다시 18.04버전부터 'Unity…","fields":{"slug":"/linux2/"},"frontmatter":{"date":"Mar 29, 2020","update":"Jan 01, 0001","title":"Linux(Ubuntu)로 살아보기 (2) - Unite, Caffeine","tags":["Linux(Ubuntu)"]}}},{"node":{"excerpt":"Linux로 살아보기 'Linux로 살아보기'라는 과제를 받았습니다. Linux 운영체제를 설치하고, 그 위에서 직접 일주일에 한 개 이상씩의 프로그램들을 설치하고 실행시켜보면서 Linux…","fields":{"slug":"/UbuntuInstall/"},"frontmatter":{"date":"Mar 22, 2020","update":"Jan 01, 0001","title":"Linux(Ubuntu)로 살아보기 (1) - 설치 및 설정","tags":["Linux(Ubuntu)"]}}}]},{"fieldValue":"MAC","totalCount":2,"edges":[{"node":{"excerpt":"Alfred 오늘 소개할 어플은 Alfred입니다.  원래 Paste2를 사용하고 있었는데, 갑자기 구독형으로 정책을 바꾸는바람에 대체 앱을 서칭하다 발견했습니다. (비싸긴 하지만)Paste2보다 훨씬 기능도 강력하고, 무엇보다도 'Snippet…","fields":{"slug":"/Alfred/"},"frontmatter":{"date":"Apr 04, 2020","update":"Jan 01, 0001","title":"MAC 필수 어플 - Alfred(Snippet)","tags":["MAC"]}}},{"node":{"excerpt":"MAC OS를 사용하는 경우, iTerm에서 VSCode를 간단한 명령어로 호출할 수 있습니다. 다음과 같이 열고자 하는 디렉토리 내에서 라는 명령어를 입력해주면 현재 경로로 VSCode가 실행됩니다.  Setting…","fields":{"slug":"/VSCodeShortCut/"},"frontmatter":{"date":"Mar 06, 2020","update":"Jan 01, 0001","title":"iTerm(Using Zsh)에서 VSCode 열기 [MAC OS]","tags":["MAC","VSCode"]}}}]},{"fieldValue":"ML","totalCount":1,"edges":[{"node":{"excerpt":"LSTM(Long Short Term Memory) 실습 Kaggle의 영화 리뷰에 대한 감정 예측 데이터셋에 대해 LSTM으로 자연어차리 실습을 해보도록 하겠습니다. Kaggle 링크를 통해 실습 데이터셋을 받을 수 있습니다. Data…","fields":{"slug":"/LSTM/"},"frontmatter":{"date":"Jun 07, 2021","update":"Jan 01, 0001","title":"자연어 처리(NLP) 실습 - LSTM","tags":["ML"]}}}]},{"fieldValue":"Pytorch","totalCount":7,"edges":[{"node":{"excerpt":"Word2Vec 실습(EN) 영어 데이터를 통해 Word2Vec을 학습시켜보도록 하겠습니다. 이라는 파이썬 패키지에 Word2Vec이 이미 구현되어 있으므로, 우리는 이를 따로 구현할 필요 없이 Word2Vec…","fields":{"slug":"/Pytorch07/"},"frontmatter":{"date":"May 29, 2021","update":"Jan 01, 0001","title":"자연어 처리(NLP)의 전처리 - Word2Vec(워드투벡터) 실습","tags":["Pytorch"]}}},{"node":{"excerpt":"Word2Vec(워드투벡터) 원-핫 인코딩에서 언급했듯, 원-핫 벡터와 같은 희소 표현(Sparce Representation…","fields":{"slug":"/Pytorch06/"},"frontmatter":{"date":"May 12, 2021","update":"Jan 01, 0001","title":"자연어 처리(NLP)의 전처리 - Word2Vec(워드투벡터)","tags":["Pytorch"]}}},{"node":{"excerpt":"희소 표현(Sparce Representation…","fields":{"slug":"/Pytorch05/"},"frontmatter":{"date":"May 02, 2021","update":"Jan 01, 0001","title":"자연어 처리(NLP)의 전처리 - 워드 임베딩","tags":["Pytorch"]}}},{"node":{"excerpt":"원-핫 인코딩(One-Hot Encoding) 지난 게시물인 정수 인코딩에서는 Vocabulary…","fields":{"slug":"/Pytorch04/"},"frontmatter":{"date":"Apr 25, 2021","update":"Jan 01, 0001","title":"자연어 처리(NLP)의 전처리 - 원-핫 인코딩","tags":["Pytorch"]}}},{"node":{"excerpt":"정수 인코딩 는 순서가 있는 자료형(list, set, tuple, dictionary, string)을 입력으로 받아, 인덱스를 순차적으로 리턴해줍니다. 앞선 Vocabulary 게시물에서 만든 단어 집합을 가져와서 정수로 바꿔줍니다. 인덱스…","fields":{"slug":"/Pytorch03/"},"frontmatter":{"date":"Apr 15, 2021","update":"Jan 01, 0001","title":"자연어 처리(NLP)의 전처리 - 정수 인코딩, 패딩","tags":["Pytorch"]}}},{"node":{"excerpt":"단어 집합(Vocabulary) 생성 단어 집합(vocabuary)이란 중복을 제거한 텍스트의 총 단어의 집합(set…","fields":{"slug":"/Pytorch02/"},"frontmatter":{"date":"Apr 13, 2021","update":"Jan 01, 0001","title":"자연어 처리(NLP)의 전처리 - 단어 집합 생성","tags":["Pytorch"]}}},{"node":{"excerpt":"자연어 처리는 일반적으로 토큰화, 단어 집합 생성, 정수 인코딩, 패딩, 벡터화의 과정을 거치게 됩니다. pytorch를 통한 자연어 처리를 진행하기 전에, 이 일련의 과정들을 알아보도록 하겠습니다. 토큰화(Tokenization…","fields":{"slug":"/Pytorch01/"},"frontmatter":{"date":"Apr 07, 2021","update":"Jan 01, 0001","title":"자연어 처리(NLP)의 전처리 - 토큰화","tags":["Pytorch"]}}}]},{"fieldValue":"QUIC","totalCount":3,"edges":[{"node":{"excerpt":"6. 실험 결과 근거리 네트워킹 실험 근거리 네트워킹 실험에서는 동일한 기기 상에서 서버와 클라이언트를 각각 실행한 환경에서 파일을 전송 후 성능을 측정했습니다. 해당 실험 환경의 Round Trip Time은 min / avg / max…","fields":{"slug":"/capstone-quic_03/"},"frontmatter":{"date":"Jun 27, 2022","update":"Jan 01, 0001","title":"TCP와 QUIC 파일 전송 성능 비교 (3)","tags":["QUIC"]}}},{"node":{"excerpt":"4. QUIC 소개 앞선 글에서 설명했듯, QUIC은 UDP를 기반으로 만들어진 전송 계층 프로토콜입니다. 하지만, 기존에 TCP를 필요로 하던 HTTP에서 TCP의 자리를 UDP 기반의 QUIC 프로토콜이 차지했다는 사실은, UDP…","fields":{"slug":"/capstone-quic_02/"},"frontmatter":{"date":"Jun 25, 2022","update":"Jan 01, 0001","title":"TCP와 QUIC 파일 전송 성능 비교 (2)","tags":["QUIC"]}}},{"node":{"excerpt":"0. 전송 계층 프로토콜의 간단한 이해 TCP와 UDP…","fields":{"slug":"/capstone-quic_01/"},"frontmatter":{"date":"Jun 24, 2022","update":"Jan 01, 0001","title":"TCP와 QUIC 파일 전송 성능 비교 (1)","tags":["QUIC"]}}}]},{"fieldValue":"VSCode","totalCount":3,"edges":[{"node":{"excerpt":"VSCode 괄호 Tab키로 나가기 VSCode…","fields":{"slug":"/TabOut/"},"frontmatter":{"date":"May 03, 2020","update":"Jan 01, 0001","title":"VSCode 괄호, 따옴표 Tab으로 나가기 [VSCode]","tags":["VSCode"]}}},{"node":{"excerpt":"VSCode Format? VSCode에는 지정된 형식으로 코드를 깔끔하고 예쁘게 정리해줄 수 있는 기능이 존재합니다. 그 기능은 바로 Format 기능인데, VSCode에서 별다른 설정을 만지지 않았다면 로 실행할 수 있습니다. (Windows…","fields":{"slug":"/Format/"},"frontmatter":{"date":"Apr 26, 2020","update":"Jan 01, 0001","title":"VSCode 저장 시 자동 format 지정 [VSCode]","tags":["VSCode"]}}},{"node":{"excerpt":"MAC OS를 사용하는 경우, iTerm에서 VSCode를 간단한 명령어로 호출할 수 있습니다. 다음과 같이 열고자 하는 디렉토리 내에서 라는 명령어를 입력해주면 현재 경로로 VSCode가 실행됩니다.  Setting…","fields":{"slug":"/VSCodeShortCut/"},"frontmatter":{"date":"Mar 06, 2020","update":"Jan 01, 0001","title":"iTerm(Using Zsh)에서 VSCode 열기 [MAC OS]","tags":["MAC","VSCode"]}}}]}]}},"pageContext":{}},"staticQueryHashes":["3649515864","63159454"]}